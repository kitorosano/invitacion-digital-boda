---
import CopyIcon from "./icons/Copy.astro";

type BankDetails = {
  bankName: string;
  accountType: string;
  accountNumber: string;
  accountHolder: string;
};
interface Props {
  message: string;
  bankDetails: BankDetails[];
}

const { message, bankDetails } = Astro.props;
---

<div class="bank-account-container">
  <h2>Regalitos</h2>

  <p>{message}</p>

  <div class="bank-account-content hidden">
    {
      bankDetails.map((detail) => (
        <section>
          <p class="bank-account-info-text">
            <span>{detail.bankName}</span>
          </p>
          <p
            class="bank-account-info-text account-number"
            data-account-number={detail.accountNumber.replace(/[^0-9]/g, "")}
          >
            <span>{detail.accountType}</span>
            {detail.accountNumber}
            <CopyIcon />
            <span class="tooltip">Â¡Copiado!</span>
          </p>
          <p class="bank-account-info-text">{detail.accountHolder}</p>
        </section>
      ))
    }
  </div>

  <button>Ver datos bancarios</button>
</div>

<style>
  .bank-account-container {
    margin: 3rem auto 0 auto;
    padding: 0.5rem 0;
    width: 100%;
    text-align: center;
  }

  .bank-account-container > h2 {
    margin: 0 auto;

    font-size: var(--text-size-lg);
    font-weight: 600;
    color: var(--color-dark);
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .bank-account-container > p {
    margin: 1rem auto 0 auto;

    font-weight: 400;
    font-size: var(--text-size-md);
    color: var(--color-dark);

    max-width: 70%;
    text-wrap: balance;
    line-height: 1.5;
    letter-spacing: 0.02em;
  }

  .bank-account-content {
    margin: 1rem auto 0 auto;

    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;

    width: 100%;
    height: 100%;

    font-size: var(--text-size-md);
    line-height: 2;

    opacity: 1;
    transition: all 0.2s ease;
  }

  .bank-account-content.hidden {
    margin: 0 auto;
    height: 0.01%;
    opacity: 0;
    gap: 0;
    font-size: 0;
    pointer-events: none;
  }

  /* .bank-account-content section {
    margin: 1rem auto 0 auto;
  }
  .bank-account-content.hidden section {
    margin: 0 auto;
  } */

  .bank-account-info-text {
    margin: 0 auto;

    font-weight: 400;
    color: var(--color-dark);
    /* text-transform: uppercase; */
    letter-spacing: 0.02em;

    text-decoration: none;
  }

  .bank-account-info-text span {
    font-weight: 700;
    letter-spacing: 0.1rem;
  }

  .account-number {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.25rem;

    cursor: pointer;
    transition: transform 0.2s ease;
  }

  .account-number:hover {
    transform: scale(1.05);
  }

  .account-number span {
    margin: 0;
    font-weight: 600;
    letter-spacing: 0rem;
  }

  .account-number .tooltip {
    position: absolute;
    width: max-content;
    padding: 0.25rem 0.5rem;

    right: -1.5rem;
    bottom: 2.2rem;

    color: var(--color-dark);
    text-align: center;
    font-size: var(--text-size-xs);

    border-radius: 10px;

    background-color: var(--color-grey);
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.2s ease;
    z-index: 10;
  }

  .account-number .tooltip::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: var(--color-grey) transparent transparent transparent;
  }

  .bank-account-container button {
    margin: 1rem auto 0 auto;
    padding: 1rem 2rem;

    font-size: var(--text-size-md);
    font-weight: 500;
    text-transform: uppercase;
    color: var(--color-light);

    border: none;
    border-radius: 10px;
    cursor: pointer;

    background-color: var(--color-dark);
    transition: all 0.2s ease;

    height: 100%;
    opacity: 1;
  }

  .bank-account-container button:hover {
    background-color: var(--color-dark-hover);
  }

  .bank-account-container:has(.bank-account-content.hidden) button {
    margin: 0 auto;
  }

  @media (min-width: 576px) {
    .bank-account-container > h2 {
      font-size: var(--text-size-xl);
    }

    .tooltip {
      right: -2rem;
      bottom: 2.5rem;
    }
  }

  @media (min-width: 1024px) {
    .bank-account-container > p {
      margin: 2rem auto 0 auto;
    }

    .bank-account-content {
      margin: 1rem auto 0 auto;
    }

    .bank-account-container button {
      transition: all 0.2s ease;
    }

    .bank-account-container button:hover {
      transform: scale(1.05);
    }

    #account-number {
      gap: 0.5rem;
    }

    .tooltip {
      padding: 0.5rem 1rem;

      right: -2.5rem;
      bottom: 3rem;
    }
  }

  @media (min-width: 1440px) {
    .bank-account-container {
      margin: 6rem auto 0 auto;
    }

    .bank-account-container > p {
      margin: 4rem auto 0 auto;
    }

    #account-number {
      gap: 1rem;
    }

    .tooltip {
      bottom: 4rem;
    }
  }
</style>

<script>
  const $BANK_ACCOUNT_CONTAINER_HTML = document.querySelector(
    ".bank-account-container",
  ) as HTMLDivElement;
  const $BANK_ACCOUNT_CONTENT_HTML = $BANK_ACCOUNT_CONTAINER_HTML.querySelector(
    ".bank-account-content",
  ) as HTMLDivElement;
  const $BUTTON_HTML = $BANK_ACCOUNT_CONTAINER_HTML.querySelector(
    "button",
  ) as HTMLButtonElement;
  const $ACCOUNT_NUMBER_HTMLS = $BANK_ACCOUNT_CONTENT_HTML.querySelectorAll(
    ".account-number",
  ) as NodeListOf<HTMLParagraphElement>;

  $BUTTON_HTML.addEventListener("click", () => {
    $BANK_ACCOUNT_CONTENT_HTML.classList.toggle("hidden");
  });

  $ACCOUNT_NUMBER_HTMLS.forEach(($ACCOUNT_NUMBER_HTML) => {
    $ACCOUNT_NUMBER_HTML.addEventListener("click", () => {
      const accountNumberToCopy =
        $ACCOUNT_NUMBER_HTML.dataset.accountNumber || "";

      navigator.clipboard.writeText(accountNumberToCopy).then(() => {
        showTooltip($ACCOUNT_NUMBER_HTML);
      });
    });
  });

  const showTooltip = ($ACCOUNT_NUMBER_HTML: HTMLParagraphElement) => {
    const $TOOLTIP_HTML = $ACCOUNT_NUMBER_HTML.querySelector(
      ".tooltip",
    ) as HTMLSpanElement;

    $TOOLTIP_HTML.style.opacity = "1";
    $TOOLTIP_HTML.style.visibility = "visible";

    setTimeout(() => {
      $TOOLTIP_HTML.style.opacity = "0";
      setTimeout(() => {
        $TOOLTIP_HTML.style.visibility = "hidden";
      }, 200);
    }, 2000);
  };
</script>
