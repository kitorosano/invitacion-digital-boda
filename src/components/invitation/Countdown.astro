---
interface Props {
  targetDate: Date;
}

const { targetDate } = Astro.props;
const formattedDate = targetDate.toISOString();

export const prerender = false;
---

<div class="countdown-container">
  <h2>Estamos a solo</h2>
  <div class="countdown-timer-container" data-countdown={formattedDate}>
    <div class="time-segment-container">
      <span class="time-value" id="days"></span>
      <span class="time-label">DÃ­as</span>
    </div>
    <div class="time-segment-container">
      <span class="time-value" id="hours"></span>
      <span class="time-label">Horas</span>
    </div>
    <div class="time-segment-container">
      <span class="time-value" id="minutes"></span>
      <span class="time-label">Minutos</span>
    </div>
    <div class="time-segment-container">
      <span class="time-value" id="seconds"></span>
      <span class="time-label">Segundos</span>
    </div>
  </div>
</div>

<style>
  .countdown-container {
    width: 100%;
    margin: 2rem 0 0 0;

    color: var(--color-dark);
    position: relative;
  }

  .countdown-container > h2 {
    margin: 0 auto;

    font-family: var(--font-secondary);
    font-size: var(--text-size-2xl);
    font-weight: 300;
    color: var(--color-dark);
    text-align: center;
  }

  .countdown-timer-container {
    width: max-content;
    margin: 0 auto;
    padding: 1.5rem 1.25rem 1rem 1.25rem;

    display: flex;
    justify-content: center;
    align-items: center;

    gap: 2rem;

    border-radius: 20px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
  }

  .time-segment-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .time-value {
    font-size: var(--text-size-2xl);
    font-weight: 300;
    pointer-events: none;
  }

  .time-label {
    font-size: var(--text-size-md);
    pointer-events: none;
  }

  @media (max-width: 374px) {
    .countdown-timer-container {
      gap: 1.5rem;
    }
  }

  @media (min-width: 576px) {
    .countdown-timer-container {
      gap: 3.5rem;
      padding: 1.5rem 2rem 1rem 2rem;
    }
  }

  @media (min-width: 1024px) {
    .countdown-timer-container {
      gap: 2rem;
      padding: 0;
      box-shadow: none;
    }

    .time-segment-container {
      padding: 1rem 2rem;
      border-radius: 20px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
      transition: transform 0.2s ease;
    }

    .time-segment-container:hover {
      cursor: pointer;
      transform: scale(1.05);
    }
  }
  @media (min-width: 1440px) {
    .countdown-container {
      margin: 3rem 0 0 0;
    }

    .countdown-container > h2 {
      margin: 0 auto 1rem auto;
    }

    .countdown-timer-container {
      gap: 3rem;
    }

    .time-segment-container {
      padding: 1.5rem 3rem;
    }
  }
</style>

<script>
  let interval: NodeJS.Timeout;

  const $COUNTDOWN_CONTAINER = document.querySelector(
    ".countdown-container",
  ) as HTMLElement;
  const COUNTDOWN_TIMER_CONTAINER = $COUNTDOWN_CONTAINER.querySelector(
    "[data-countdown]",
  ) as HTMLElement;
  const DAYS_HTML = $COUNTDOWN_CONTAINER.querySelector("#days") as HTMLElement;
  const HOURS_HTML = $COUNTDOWN_CONTAINER.querySelector(
    "#hours",
  ) as HTMLElement;
  const MINUTES_HTML = $COUNTDOWN_CONTAINER.querySelector(
    "#minutes",
  ) as HTMLElement;
  const SECONDS_HTML = $COUNTDOWN_CONTAINER.querySelector(
    "#seconds",
  ) as HTMLElement;

  const targetDate = new Date(COUNTDOWN_TIMER_CONTAINER.dataset.countdown!);

  const updateCountdown = () => {
    const now = new Date();
    const difference = targetDate.getTime() - now.getTime();

    if (difference <= 0) {
      clearInterval(interval);
      DAYS_HTML.textContent = "00";
      HOURS_HTML.textContent = "00";
      MINUTES_HTML.textContent = "00";
      SECONDS_HTML.textContent = "00";
      return;
    }

    const days = Math.floor(difference / (1000 * 60 * 60 * 24));
    const hours = Math.floor((difference / (1000 * 60 * 60)) % 24);
    const minutes = Math.floor((difference / (1000 * 60)) % 60);
    const seconds = Math.floor((difference / 1000) % 60);

    const formattedDays = String(days).padStart(2, "0");
    const formattedHours = String(hours).padStart(2, "0");
    const formattedMinutes = String(minutes).padStart(2, "0");
    const formattedSeconds = String(seconds).padStart(2, "0");

    DAYS_HTML.textContent = formattedDays;
    HOURS_HTML.textContent = formattedHours;
    MINUTES_HTML.textContent = formattedMinutes;
    SECONDS_HTML.textContent = formattedSeconds;
    // console.log({
    //   formattedDays,
    //   formattedHours,
    //   formattedMinutes,
    //   formattedSeconds,
    // });
  };

  interval = setInterval(updateCountdown, 1000);
</script>
