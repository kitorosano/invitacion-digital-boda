---
interface Props {
  couple: string;
  title: string;
  img: string;
}

const { couple, title, img } = Astro.props;
---

<div class="hero-container">
  <img src={img} alt={title} />

  <div class="hero-content">
    <h2>{title}</h2>
    <p>{couple}</p>
  </div>
</div>

<style>
  .hero-container {
    width: 100%;
    height: 90svh;
    overflow: hidden;
    position: relative;
  }

  .hero-container img {
    position: absolute;
    left: 50%;
    transform: translate(-50%);

    width: 160%;
    height: 100%;
    object-fit: cover;

    filter: brightness(0.7);
    pointer-events: none;
  }

  .hero-container::after {
    content: "";
    position: absolute;
    bottom: -1px;
    left: 0;
    width: 100%;

    height: 30px;
    background: linear-gradient(to top, var(--bg-color), transparent);
  }

  .hero-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;

    position: absolute;
    bottom: 10%;
    left: 50%;
    transform: translateX(-50%);

    text-align: center;
    gap: 1rem;
  }

  .hero-content h2 {
    margin: 0;

    text-transform: uppercase;
    font-size: var(--text-size-lg);
    font-weight: 300;
    letter-spacing: 0.3rem;
    color: var(--color-light);
    text-shadow: 1px 2px 2px rgba(0, 0, 0, 0.7);
  }

  .hero-content p {
    margin: 0;

    font-family: var(--font-secondary);
    font-size: var(--text-size-2xl);
    word-spacing: 0.5rem;
    color: var(--color-light);
    text-shadow: 2px 4px 4px rgba(0, 0, 0, 0.7);
  }

  @media (min-width: 576px) {
    .hero-container img {
      object-position: 50% 40%;
    }
  }

  @media (min-width: 768px) {
    .hero-container {
      height: 100svh;
    }
    .hero-container::after {
      height: 50px;
    }
    .hero-container img {
      width: 100%;
      height: 100%;
    }
  }

  @media (min-width: 1200px) {
  }
  @media (min-width: 1440px) {
  }
</style>
